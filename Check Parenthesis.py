class Node:    def __init__(self, data):        self.data=data        self.address=Noneclass Parenthesis:    def __init__(self):        self.head=None    def push(self, node):        node.address=self.head        self.head=node    def pop(self):        if self.head is not None:            self.head=self.head.address    def entry_string(self):        stg=input("Enter any parenthesis !")        for i in stg:            if i=="(" or i=="{" or i=="[":                self.push(Node(i))                print("Push: ", i)            else:                if self.head is not None:                    if (i == ")" and self.head.data == "(") or (i == "}" and self.head.data == "{") or (                            i == "]" and self.head.data == "["):                        self.pop()                        print("Pop: ", i)                    elif i==")" or i=="}" or i=="]":                        print("Invalid expression !")                        return                else:                    if i == ")" or i == "}" or i == "]":                        print("Invalid expression !")                        return        if self.head is not None:            print("InValid expression !")            return        print("Valid expression !")Parenthesis().entry_string()